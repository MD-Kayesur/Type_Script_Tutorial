// TypeScript-ржП module export ржУ import ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржорж╛ржзрзНржпржорзЗ ржЖржорж░рж╛ ржПржХ ржлрж╛ржЗрж▓ ржерзЗржХрзЗ ржЖрж░рзЗржХ ржлрж╛ржЗрж▓рзЗ ржХрзЛржб (function, variable, class, type) share ржмрж╛ reuse ржХрж░рждрзЗ ржкрж╛рж░рж┐ред

// Basic Concepts:
// ЁЯФ╣ export
// ржПржХржЯрж╛ ржлрж╛ржЗрж▓ ржерзЗржХрзЗ ржХрзЛржирзЛ ржЬрж┐ржирж┐рж╕ ржмрж╛ржЗрж░рзЗ ржкрж╛ржарж╛ржирзЛрж░ ржЬржирзНржпред

// ЁЯФ╣ import
// ржЕржирзНржп ржлрж╛ржЗрж▓ ржерзЗржХрзЗ ржХрзЛржирзЛ ржЬрж┐ржирж┐рж╕ ржЖржирж╛рж░ ржЬржирзНржпред


// mathUtils.ts(export ржлрж╛ржЗрж▓)
 
export function add(a: number, b: number): number {
  return a + b;
}

export const PI = 3.1416;


// (import ржлрж╛ржЗрж▓) 
// import { add, PI } from './mathUtils';

console.log(add(5, 3));   // Output: 8
console.log(PI);          // Output: 3.1416


// Export ржжрзБржЗржнрж╛ржмрзЗ рж╣рзЯ:
// 1. ЁЯФ╣ Named Export (рж╕ржмржЪрзЗрзЯрзЗ рж╕рж╛ржзрж╛рж░ржг)
 
// utils.ts
export const name = "Rahim";
export function greet() {
  console.log("Hello!");
}
 
// main.ts
// import { name, greet } from './utils';




// 2. ЁЯФ╕ Default Export (ржПржХржЯрж╛ржЗ ржЬрж┐ржирж┐рж╕ export ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ)
 
// logger.ts
export default function log(msg: string): void {
  console.log("LOG:", msg);
}
 
// main.ts
// import log from './logger';
// тЪая╕П Note: default export ржХрж░рж▓рзЗ import ржХрж░рж╛рж░ рж╕ржорзЯ {} ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ рж╣рзЯ ржирж╛ред
log("Server started");




// Class Export Example
// ЁЯСЙ User.ts
 
export class User1 {
  constructor(public name: string, public age: number) {}

  display(): void {
    console.log(`Name: ${this.name}, Age: ${this.age}`);
  }
}
// ЁЯСЙ app.ts
 
// import { User } from './User';

const user1 = new User1("Karim", 30);
user1.display();



// Type or Interface Export
 
// types.ts
export type User = {
  name: string;
  age: number;
};
 
// main.ts
// import { User } from './types';

const user: User = { name: "Rahim", age: 25 };

console.log(user);




















